import {z} from 'zod'

export class PayrollGroupsSchema {
    postCreatePayrollGroup() {
        return z.object({
            additional_salaries: z.array(
                z.object({
                    calculation_type: z.string(),
                    created_at: z.string(),
                    deleted_at: z.null(),
                    id: z.number(),
                    payroll_group_id: z.number(),
                    salary_type: z.string(),
                    shift_type_id: z.null(),
                    shift_type_name: z.null(),
                    updated_at: z.null(),
                    value: z.number(),
                    working_type: z.string(),
                })
            ),
            allowance_meals: z.number(),
            allowance_meals_calc_type: z.string(),
            allowance_meals_eligible_attendance_statuses: z.array(z.string()),
            allowance_meals_is_proportional: z.null(),
            allowance_meals_shift_type_ids: z.array(z.unknown()),
            allowance_meals_shift_types: z.null(),
            allowance_other: z.number(),
            allowance_other_calc_type: z.null(),
            allowance_phone: z.number(),
            allowance_phone_calc_type: z.string(),
            allowance_phone_eligible_attendance_statuses: z.array(z.string()),
            allowance_phone_is_proportional: z.null(),
            allowance_phone_shift_type_ids: z.array(z.unknown()),
            allowance_phone_shift_types: z.null(),
            allowance_position: z.number(),
            allowance_position_calc_type: z.string(),
            allowance_position_eligible_attendance_statuses: z.array(z.string()),
            allowance_position_is_proportional: z.null(),
            allowance_position_shift_type_ids: z.array(z.unknown()),
            allowance_position_shift_types: z.null(),
            allowance_transport: z.number(),
            allowance_transport_calc_type: z.string(),
            allowance_transport_eligible_attendance_statuses: z.array(z.string()),
            allowance_transport_is_proportional: z.null(),
            allowance_transport_shift_type_ids: z.array(z.unknown()),
            allowance_transport_shift_types: z.null(),
            bpjs_employment_agent_percentage: z.number(),
            bpjs_employment_agent_type: z.string(),
            bpjs_employment_agent_value: z.number(),
            bpjs_employment_baseline_type: z.string(),
            bpjs_employment_baseline_value: z.number(),
            bpjs_employment_client_percentage: z.number(),
            bpjs_employment_client_type: z.string(),
            bpjs_employment_client_value: z.number(),
            bpjs_insurance_agent_percentage: z.number(),
            bpjs_insurance_agent_type: z.string(),
            bpjs_insurance_agent_value: z.number(),
            bpjs_insurance_baseline_type: z.string(),
            bpjs_insurance_baseline_value: z.number(),
            bpjs_insurance_client_percentage: z.number(),
            bpjs_insurance_client_type: z.string(),
            bpjs_insurance_client_value: z.number(),
            bpjs_tk_membership: z.string(),
            bpjs_tk_program: z.array(z.string()),
            bpu_allocation_type: z.string(),
            bpu_jht_agent_baseline: z.null(),
            bpu_jht_agent_type: z.string(),
            bpu_jht_agent_value: z.number(),
            bpu_jht_baseline: z.null(),
            bpu_jht_type: z.string(),
            bpu_jht_value: z.number(),
            bpu_jkk_baseline: z.number(),
            bpu_jkk_paid_by: z.string(),
            bpu_jkk_type: z.string(),
            bpu_jkk_value: z.number(),
            bpu_jkm_baseline: z.number(),
            bpu_jkm_paid_by: z.string(),
            bpu_jkm_type: z.string(),
            bpu_jkm_value: z.number(),
            bpu_jp_agent_baseline: z.null(),
            bpu_jp_agent_type: z.string(),
            bpu_jp_agent_value: z.number(),
            bpu_jp_baseline: z.null(),
            bpu_jp_type: z.string(),
            bpu_jp_value: z.number(),
            bpu_percentage: z.number(),
            bpu_status: z.boolean(),
            client_id: z.number(),
            created_at: z.string(),
            custom_payroll_cycle_config_dates: z.null(),
            custom_payroll_cycle_config_day_cycle_period: z.null(),
            custom_payroll_cycle_config_day_start_date: z.null(),
            custom_payroll_cycle_cutoff_type: z.null(),
            deduction: z.number(),
            deduction_calc_type: z.string(),
            deleted_at: z.null(),
            disbursement_date: z.array(z.string()),
            id: z.number(),
            incentive: z.number(),
            incentive_calc_type: z.string(),
            is_bpjs_insurance_active: z.boolean(),
            is_custom_calculation: z.boolean(),
            name: z.string(),
            overtime: z.number(),
            payment_cycle: z.string(),
            payment_date: z.array(z.string()),
            payroll_branches: z.array(
                z.object({
                    branch: z.object({
                        attendance_approval_type: z.string(),
                        attendance_source: z.string(),
                        attendance_type: z.string(),
                        benefit_type: z.null(),
                        branch_location: z.string(),
                        check_in_code: z.null(),
                        check_in_code_qr_url: z.null(),
                        check_out_code: z.null(),
                        check_out_code_qr_url: z.null(),
                        city_id: z.number(),
                        client_id: z.number(),
                        created_at: z.string(),
                        deleted_at: z.null(),
                        district_id: z.number(),
                        effective_working_days: z.array(z.number()),
                        enable_geofence: z.boolean(),
                        end_time_utc: z.string(),
                        id: z.number(),
                        location_detail: z.string(),
                        name: z.string(),
                        position: z.array(z.number()),
                        province_id: z.number(),
                        radius: z.number(),
                        require_checkout: z.boolean(),
                        selfie_instruction: z.string(),
                        shifting_configuration_type: z.string(),
                        start_time_utc: z.string(),
                        status: z.string(),
                        updated_at: z.null(),
                    }),
                    branch_id: z.number(),
                    created_at: z.string(),
                    deleted_at: z.null(),
                    id: z.number(),
                    payroll_id: z.number(),
                    updated_at: z.null(),
                })
            ),
            payroll_components: z.array(z.unknown()),
            pph_percentage: z.number(),
            pph_status: z.boolean(),
            prorated_shift_type_ids: z.array(z.unknown()),
            prorated_shift_types: z.null(),
            salary: z.number(),
            salary_calculation_type: z.string(),
            salary_type: z.string(),
            show_onboard: z.boolean(),
            tax_type: z.string(),
            taxable_components: z.array(z.string()),
            type: z.string(),
            updated_at: z.null(),
        });
    }
}