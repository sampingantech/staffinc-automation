import {z} from 'zod'
export class PayrollReportDetailsSchema {
    getReports() {
        return z.object({
            data: z.array(
                z.object({
                    actual_basic_salary_sum: z.number(),
                    actual_days_work: z.number(),
                    agent: z.object({
                        id: z.number(),
                        name: z.string(),
                        phone_number: z.string(),
                        roles: z.string(),
                        status: z.string(),
                    }),
                    agent_id: z.number(),
                    approved_at: z.null(),
                    approved_by: z.null(),
                    approved_by_client_account: z.null(),
                    benefit_sum: z.number(),
                    branch_id: z.number(),
                    client_id: z.number(),
                    components: z.array(z.unknown()),
                    coverage_sum: z.number(),
                    created_at: z.string(),
                    created_by: z.number(),
                    created_by_client_account: z.object({
                        client_id: z.number(),
                        country_code: z.string(),
                        created_at: z.string(),
                        deleted_at: z.null(),
                        email: z.string(),
                        id: z.number(),
                        name: z.string(),
                        phone_number: z.string(),
                        status: z.string(),
                        title: z.string(),
                        updated_at: z.string(),
                    }),
                    deduction_sum: z.number(),
                    deleted_at: z.null(),
                    disbursement_created_at: z.null(),
                    disbursement_error_remark: z.null(),
                    disbursement_status: z.null(),
                    disbursement_updated_at: z.null(),
                    fixed_deduction_sum: z.number(),
                    id: z.number(),
                    incentive_sum: z.number(),
                    inferred_salary_calculation_type: z.null(),
                    is_custom_pph: z.boolean(),
                    is_paid: z.boolean(),
                    overtime_sum: z.number(),
                    payroll_group: z.object({
                        additional_salaries: z.array(
                            z.object({
                                actual_working_attendance: z.number(),
                                calculated_attendance_salary: z.number(),
                                calculation_type: z.string(),
                                has_edited: z.boolean(),
                                id: z.number(),
                                payroll_group_id: z.number(),
                                salary_type: z.string(),
                                shift: z.null(),
                                shift_type_id: z.null(),
                                value: z.number(),
                                working_type: z.string(),
                            })
                        ),
                        allowance_meals: z.number(),
                        allowance_meals_calc_type: z.string(),
                        allowance_meals_eligible_attendance_statuses: z.array(z.string()),
                        allowance_meals_is_proportional: z.null(),
                        allowance_meals_shift_type_ids: z.array(z.unknown()),
                        allowance_other: z.number(),
                        allowance_other_calc_type: z.null(),
                        allowance_phone: z.number(),
                        allowance_phone_calc_type: z.string(),
                        allowance_phone_eligible_attendance_statuses: z.array(z.string()),
                        allowance_phone_is_proportional: z.null(),
                        allowance_phone_shift_type_ids: z.array(z.unknown()),
                        allowance_position: z.number(),
                        allowance_position_calc_type: z.string(),
                        allowance_position_eligible_attendance_statuses: z.array(z.string()),
                        allowance_position_is_proportional: z.null(),
                        allowance_position_shift_type_ids: z.array(z.unknown()),
                        allowance_transport: z.number(),
                        allowance_transport_calc_type: z.string(),
                        allowance_transport_eligible_attendance_statuses: z.array(z.string()),
                        allowance_transport_is_proportional: z.null(),
                        allowance_transport_shift_type_ids: z.array(z.unknown()),
                        bpjs_employment_agent_percentage: z.number(),
                        bpjs_employment_agent_type: z.string(),
                        bpjs_employment_agent_value: z.number(),
                        bpjs_employment_baseline_type: z.string(),
                        bpjs_employment_baseline_value: z.number(),
                        bpjs_employment_client_percentage: z.number(),
                        bpjs_employment_client_type: z.string(),
                        bpjs_employment_client_value: z.number(),
                        bpjs_insurance_agent_percentage: z.number(),
                        bpjs_insurance_agent_type: z.string(),
                        bpjs_insurance_agent_value: z.number(),
                        bpjs_insurance_baseline_type: z.string(),
                        bpjs_insurance_baseline_value: z.number(),
                        bpjs_insurance_client_percentage: z.number(),
                        bpjs_insurance_client_type: z.string(),
                        bpjs_insurance_client_value: z.number(),
                        bpjs_tk_membership: z.string(),
                        bpjs_tk_program: z.array(z.string()),
                        bpu_allocation_type: z.string(),
                        bpu_jht_agent_baseline: z.null(),
                        bpu_jht_agent_type: z.string(),
                        bpu_jht_agent_value: z.number(),
                        bpu_jht_baseline: z.null(),
                        bpu_jht_type: z.string(),
                        bpu_jht_value: z.number(),
                        bpu_jkk_baseline: z.number(),
                        bpu_jkk_paid_by: z.string(),
                        bpu_jkk_type: z.string(),
                        bpu_jkk_value: z.number(),
                        bpu_jkm_baseline: z.number(),
                        bpu_jkm_paid_by: z.string(),
                        bpu_jkm_type: z.string(),
                        bpu_jkm_value: z.number(),
                        bpu_jp_agent_baseline: z.null(),
                        bpu_jp_agent_type: z.string(),
                        bpu_jp_agent_value: z.number(),
                        bpu_jp_baseline: z.null(),
                        bpu_jp_type: z.string(),
                        bpu_jp_value: z.number(),
                        bpu_percentage: z.number(),
                        bpu_status: z.boolean(),
                        custom_payroll_cycle_config_dates: z.null(),
                        custom_payroll_cycle_config_day_cycle_period: z.null(),
                        custom_payroll_cycle_config_day_start_date: z.null(),
                        custom_payroll_cycle_cutoff_type: z.null(),
                        deduction: z.number(),
                        deduction_calc_type: z.string(),
                        disbursement_date: z.array(z.string()),
                        id: z.number(),
                        incentive: z.number(),
                        incentive_calc_type: z.string(),
                        is_bpjs_insurance_active: z.boolean(),
                        is_custom_calculation: z.boolean(),
                        name: z.string(),
                        overtime: z.number(),
                        payment_cycle: z.string(),
                        payment_date: z.string(),
                        payroll_branches: z.array(
                            z.object({
                                branch: z.object({
                                    attendance_approval_type: z.string(),
                                    attendance_source: z.string(),
                                    attendance_type: z.string(),
                                    benefit_type: z.null(),
                                    branch_location: z.string(),
                                    check_in_code: z.null(),
                                    check_in_code_qr_url: z.null(),
                                    check_out_code: z.null(),
                                    check_out_code_qr_url: z.null(),
                                    city_id: z.number(),
                                    client_id: z.number(),
                                    created_at: z.string(),
                                    deleted_at: z.null(),
                                    district_id: z.number(),
                                    effective_working_days: z.array(z.number()),
                                    enable_geofence: z.boolean(),
                                    end_time_utc: z.string(),
                                    id: z.number(),
                                    location_detail: z.string(),
                                    name: z.string(),
                                    position: z.array(z.number()),
                                    province_id: z.number(),
                                    radius: z.number(),
                                    require_checkout: z.boolean(),
                                    selfie_instruction: z.string(),
                                    shifting_configuration_type: z.string(),
                                    start_time_utc: z.string(),
                                    status: z.string(),
                                    updated_at: z.null(),
                                }),
                                branch_id: z.number(),
                                created_at: z.string(),
                                deleted_at: z.null(),
                                id: z.number(),
                                payroll_id: z.number(),
                                updated_at: z.null(),
                            })
                        ),
                        payroll_components: z.array(z.unknown()),
                        pph_percentage: z.number(),
                        pph_status: z.boolean(),
                        prorated_shift_type_ids: z.array(z.unknown()),
                        salary: z.number(),
                        salary_calculation_type: z.string(),
                        salary_type: z.string(),
                        show_onboard: z.boolean(),
                        tax_type: z.string(),
                        taxable_components: z.array(z.string()),
                        type: z.string(),
                    }),
                    payroll_id: z.string(),
                    payroll_report_id: z.string(),
                    pph_percentage: z.number(),
                    pph_sum: z.number(),
                    recent_notes: z.object({
                        action: z.string(),
                        admin_id: z.null(),
                        agent_id: z.null(),
                        client_account_id: z.number(),
                        created_at: z.string(),
                        created_by_email: z.string(),
                        deleted_at: z.null(),
                        id: z.number(),
                        message: z.null(),
                        updated_at: z.null(),
                    }),
                    show_overtime: z.boolean(),
                    status: z.string(),
                    sub_total_non_additional: z.number(),
                    subtotal: z.number(),
                    total_days_work: z.number(),
                    total_overtime_minutes: z.number(),
                    total_period_fee: z.number(),
                    updated_at: z.null(),
                    updated_by: z.null(),
                    updated_by_client_account: z.null(),
                })
            ),
            details: z.object({
                grand_total: z.number(),
                grand_total_coverage: z.number(),
                grand_total_deduction: z.number(),
                grand_total_incentive: z.number(),
                grand_total_overtime: z.number(),
                grand_total_salary: z.number(),
                payroll_report: z.object({
                    client_id: z.number(),
                    id: z.number(),
                    name: z.string(),
                    payment_cycle: z.string(),
                    payment_date: z.string(),
                    payroll_period: z.array(z.string()),
                    report_id: z.string(),
                    working_attendance_history: z.object({ data: z.array(z.unknown()) }),
                    working_attendance_net: z.number(),
                }),
                salary_type: z.string(),
                shifting_configuration_type: z.string(),
                total_agent: z.number(),
                total_paid: z.number(),
                total_status: z.object({
                    status_approval: z.string(),
                    status_pending: z.string(),
                    total_approval: z.number(),
                    total_pending: z.number(),
                }),
            }),
            header: z.object({
                branches: z.array(z.object({ id: z.number(), name: z.string() })),
                payment_cycle: z.string(),
                payment_period: z.array(z.string()),
                payroll_groups: z.array(z.object({ id: z.number(), name: z.string() })),
                salary_calculation_type: z.string(),
                shifting_configuration: z.string(),
            }),
            meta: z.object({ limit: z.number(), offset: z.number(), total: z.number() }),
            payroll_report_is_editable: z.boolean(),
        });
    }
}