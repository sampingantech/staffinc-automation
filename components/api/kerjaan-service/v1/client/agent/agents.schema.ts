import { z } from 'zod'

export class agentSchema {
    postCreateAgent() {
        return z.object({
            selfie_image_url: z.null(),
            phone_number: z.string(),
            whatsapp_number: z.null(),
            status: z.string(),
            roles: z.string(),
            push_token: z.null(),
            name: z.string(),
            email: z.string(),
            gender: z.string(),
            citizenship_number: z.string(),
            citizenship_image_url: z.string(),
            address: z.string(),
            domicile: z.string(),
            date_of_birth: z.string(),
            birth_place: z.string(),
            is_default_otp: z.boolean(),
            country_code: z.string(),
            tnc_version: z.null(),
            tax_id_number: z.null(),
            external_id: z.string(),
            payroll_group_id: z.number(),
            blood_type: z.string(),
            marital_status: z.string(),
            religion: z.string(),
            resignation_date: z.null(),
            resignation_reason: z.null(),
            other_resignation_reason: z.null(),
            enable_instant_payment: z.boolean(),
            profile_onboard_completed: z.boolean(),
            hide_agent_onboard: z.boolean(),
            selfie_enrollment_id: z.null(),
            selfie_processing_id: z.null(),
            selfie_enrollment_attempt: z.number(),
            is_eligible_for_contract_signing: z.boolean(),
            team_leader_id: z.null(),
            id_card_url: z.null(),
            id_card_number: z.null(),
            id_card_updated_at: z.null(),
            approval_client_acc_id: z.number(),
            id: z.number(),
            client_id: z.number(),
            client_name: z.null(),
            client_logo_url: z.null(),
            created_at: z.string(),
            updated_at: z.null(),
            deleted_at: z.null(),
        });

    }
    createAgent() {
        return z.object({
            attendance: z.object({ leave_policy_ids: z.array(z.number()) }),
            emergency_contact: z.object({
                address: z.string(),
                name: z.string(),
                phone_number: z.string(),
                relationship: z.string(),
            }),
            employee: z.object({
                approval_client_acc_id: z.number(),
                branch_id: z.string(),
                email: z.string(),
                join_date: z.string(),
                name: z.string(),
                payroll_group_id: z.string(),
                phone_number: z.string(),
                position: z.string(),
            }),
            employment_data: z.object({
                contract_type: z.string(),
                deployment_city_id: z.number(),
                deployment_district_id: z.number(),
                deployment_group: z.string(),
                deployment_province_id: z.number(),
                employment_type: z.string(),
                end_date: z.string(),
                external_id: z.string(),
                privy_id: z.string(),
                project_ids: z.array(z.number()),
                start_date: z.string(),
                entity_company: z.string(),
            }),
            payment_information: z.object({
                account_number: z.string(),
                bank_code_id: z.number(),
                bank_name: z.string(),
                owner_name: z.string(),
                passbook_image_url: z.string(),
            }),
            personal_data: z.object({
                birth_place: z.string(),
                blood_type: z.string(),
                citizenship_image_url: z.string(),
                citizenship_number: z.string(),
                city_id: z.number(),
                date_of_birth: z.string(),
                district_id: z.number(),
                domicile: z.string(),
                gender: z.string(),
                marital_status: z.string(),
                province_id: z.number(),
                religion: z.string(),
            }),
            social_security: z.object({
                bpjs_of_health_number: z.string(),
                bpjs_membership: z.string(),
                bpjs_of_employment_number: z.string(),
                bpjs_tk_program: z.array(z.string()),
                is_bpjs_calculation_active: z.boolean(),
                is_bpjs_employment_calculation_active: z.boolean(),
                non_taxable_income_status: z.string(),
                tax_id: z.string(),
            }),
        });

    }
}